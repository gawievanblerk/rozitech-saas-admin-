name: Deploy to Xneelo Server

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.XNEELO_SSH_KEY }}
      
      - name: Add server to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.XNEELO_SERVER_HOST }} >> ~/.ssh/known_hosts
      
      - name: Test SSH Connection
        run: |
          echo "Testing SSH connection..."
          ssh -o ConnectTimeout=10 ${{ secrets.XNEELO_SERVER_USER }}@${{ secrets.XNEELO_SERVER_HOST }} "echo 'SSH test successful' && whoami && pwd"
      
      - name: Setup Server
        run: |
          ssh ${{ secrets.XNEELO_SERVER_USER }}@${{ secrets.XNEELO_SERVER_HOST }} << 'ENDSSH'
            echo "Setting up Rozitech SaaS on Xneelo..."
            
            # Create directories
            mkdir -p /opt/rozitech-saas/{nginx/conf.d,logs,data}
            cd /opt/rozitech-saas
            
            # Create a simple test file
            echo "Deployment test at $(date)" > deployment-test.txt
            
            # Check Docker
            docker --version || echo "Docker not found"
            docker-compose --version || echo "Docker Compose not found"
            
            echo "Setup complete!"
          ENDSSH
      
      - name: Copy Application Files
        run: |
          # Create a simple docker-compose for testing
          cat > docker-compose-simple.yml << 'EOF'
          version: '3.8'
          services:
            web:
              image: nginx:alpine
              container_name: rozitech-test
              ports:
                - "8080:80"
              volumes:
                - ./deployment-test.txt:/usr/share/nginx/html/index.html:ro
          EOF
          
          # Copy to server
          scp docker-compose-simple.yml ${{ secrets.XNEELO_SERVER_USER }}@${{ secrets.XNEELO_SERVER_HOST }}:/opt/rozitech-saas/
      
      - name: Start Test Container
        run: |
          ssh ${{ secrets.XNEELO_SERVER_USER }}@${{ secrets.XNEELO_SERVER_HOST }} << 'ENDSSH'
            cd /opt/rozitech-saas
            
            # Stop any existing test container
            docker stop rozitech-test 2>/dev/null || true
            docker rm rozitech-test 2>/dev/null || true
            
            # Start test container
            docker-compose -f docker-compose-simple.yml up -d
            
            # Check if it's running
            sleep 5
            docker ps
            curl -f http://localhost:8080 || echo "Test container not accessible"
          ENDSSH
      
      - name: Clean up
        if: always()
        run: |
          echo "Deployment complete"